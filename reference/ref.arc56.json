{
  "name": "ARC56Test",
  "desc": "",
  "methods": [
    {
      "name": "foo",
      "args": [
        {
          "name": "inputs",
          "type": "((uint64,uint64),(uint64,uint64))",
          "struct": "Inputs"
        }
      ],
      "returns": {
        "type": "(uint64,uint64)",
        "struct": "Outputs"
      },
      "actions": {
        "create": [],
        "call": [
          "NoOp"
        ]
      }
    },
    {
      "name": "createApplication",
      "args": [],
      "returns": {
        "type": "void"
      },
      "actions": {
        "create": [
          "NoOp"
        ],
        "call": []
      }
    }
  ],
  "arcs": [
    4,
    56
  ],
  "structs": {
    "{ foo: uint16; bar: uint16 }": {
      "foo": "uint16",
      "bar": "uint16"
    },
    "Outputs": {
      "sum": "uint64",
      "difference": "uint64"
    },
    "Inputs": {
      "add": {
        "a": "uint64",
        "b": "uint64"
      },
      "subtract": {
        "a": "uint64",
        "b": "uint64"
      }
    }
  },
  "state": {
    "schema": {
      "global": {
        "bytes": 37,
        "ints": 1
      },
      "local": {
        "bytes": 13,
        "ints": 1
      }
    },
    "keys": {
      "global": [
        {
          "name": "globalKey",
          "key": "globalKey",
          "keyType": "bytes",
          "valueType": "uint64"
        }
      ],
      "local": [
        {
          "name": "localKey",
          "key": "localKey",
          "keyType": "bytes",
          "valueType": "uint64"
        }
      ],
      "box": [
        {
          "name": "boxKey",
          "key": "boxKey",
          "keyType": "bytes",
          "valueType": "string"
        }
      ]
    },
    "maps": {
      "global": [
        {
          "name": "globalMap",
          "keyType": "string",
          "valueType": "{ foo: uint16; bar: uint16 }",
          "prefix": "p"
        }
      ],
      "local": [
        {
          "name": "localMap",
          "keyType": "bytes",
          "valueType": "string",
          "prefix": "p"
        }
      ],
      "box": [
        {
          "name": "boxMap",
          "keyType": "Inputs",
          "valueType": "Outputs",
          "prefix": "p"
        }
      ]
    }
  },
  "bareActions": {
    "create": [],
    "call": []
  },
  "sourceInfo": [
    {
      "teal": 1,
      "source": 6,
      "pc": [
        0,
        1,
        2,
        3
      ]
    },
    {
      "teal": 13,
      "source": 6,
      "pc": [
        4,
        5
      ]
    },
    {
      "teal": 14,
      "source": 6,
      "pc": [
        6
      ]
    },
    {
      "teal": 15,
      "source": 6,
      "pc": [
        7,
        8
      ]
    },
    {
      "teal": 16,
      "source": 6,
      "pc": [
        9
      ]
    },
    {
      "teal": 17,
      "source": 6,
      "pc": [
        10,
        11
      ]
    },
    {
      "teal": 18,
      "source": 6,
      "pc": [
        12
      ]
    },
    {
      "teal": 19,
      "source": 6,
      "pc": [
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24,
        25,
        26,
        27,
        28,
        29,
        30,
        31,
        32,
        33,
        34,
        35,
        36,
        37,
        38
      ]
    },
    {
      "teal": 23,
      "source": 6,
      "errorMessage": "The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?",
      "pc": [
        39
      ]
    },
    {
      "teal": 28,
      "source": 21,
      "pc": [
        40,
        41,
        42,
        43,
        44,
        45
      ]
    },
    {
      "teal": 31,
      "source": 21,
      "pc": [
        46,
        47,
        48
      ]
    },
    {
      "teal": 32,
      "source": 21,
      "pc": [
        49
      ]
    },
    {
      "teal": 33,
      "source": 21,
      "pc": [
        50
      ]
    },
    {
      "teal": 34,
      "source": 21,
      "pc": [
        51,
        52
      ]
    },
    {
      "teal": 35,
      "source": 21,
      "pc": [
        53
      ]
    },
    {
      "teal": 38,
      "source": 21,
      "errorMessage": "argument 0 (inputs) for foo must be a ((uint64,uint64),(uint64,uint64))",
      "pc": [
        54
      ]
    },
    {
      "teal": 41,
      "source": 21,
      "pc": [
        55,
        56,
        57
      ]
    },
    {
      "teal": 42,
      "source": 21,
      "pc": [
        58
      ]
    },
    {
      "teal": 43,
      "source": 21,
      "pc": [
        59
      ]
    },
    {
      "teal": 44,
      "source": 21,
      "pc": [
        60
      ]
    },
    {
      "teal": 45,
      "source": 21,
      "pc": [
        61
      ]
    },
    {
      "teal": 49,
      "source": 21,
      "pc": [
        62,
        63,
        64
      ]
    },
    {
      "teal": 54,
      "source": 22,
      "pc": [
        65,
        66
      ]
    },
    {
      "teal": 55,
      "source": 22,
      "pc": [
        67,
        68,
        69
      ]
    },
    {
      "teal": 56,
      "source": 22,
      "pc": [
        70
      ]
    },
    {
      "teal": 57,
      "source": 22,
      "pc": [
        71,
        72
      ]
    },
    {
      "teal": 58,
      "source": 22,
      "pc": [
        73,
        74,
        75
      ]
    },
    {
      "teal": 59,
      "source": 22,
      "pc": [
        76
      ]
    },
    {
      "teal": 60,
      "source": 22,
      "pc": [
        77
      ]
    },
    {
      "teal": 61,
      "source": 22,
      "pc": [
        78,
        79,
        80
      ]
    },
    {
      "teal": 65,
      "source": 22,
      "errorMessage": "subtract.a must be greater than subtract.b",
      "pc": [
        81
      ]
    },
    {
      "teal": 70,
      "source": 24,
      "pc": [
        82,
        83,
        84,
        85,
        86,
        87,
        88,
        89,
        90,
        91,
        92
      ]
    },
    {
      "teal": 71,
      "source": 24,
      "pc": [
        93,
        94
      ]
    },
    {
      "teal": 72,
      "source": 24,
      "pc": [
        95
      ]
    },
    {
      "teal": 76,
      "source": 25,
      "pc": [
        96,
        97,
        98,
        99,
        100,
        101,
        102,
        103
      ]
    },
    {
      "teal": 77,
      "source": 25,
      "pc": [
        104,
        105,
        106,
        107,
        108,
        109
      ]
    },
    {
      "teal": 78,
      "source": 25,
      "pc": [
        110
      ]
    },
    {
      "teal": 85,
      "source": 28,
      "pc": [
        111,
        112
      ]
    },
    {
      "teal": 86,
      "source": 28,
      "pc": [
        113,
        114,
        115
      ]
    },
    {
      "teal": 87,
      "source": 28,
      "pc": [
        116
      ]
    },
    {
      "teal": 88,
      "source": 28,
      "pc": [
        117,
        118
      ]
    },
    {
      "teal": 89,
      "source": 28,
      "pc": [
        119,
        120,
        121
      ]
    },
    {
      "teal": 90,
      "source": 28,
      "pc": [
        122
      ]
    },
    {
      "teal": 91,
      "source": 28,
      "pc": [
        123
      ]
    },
    {
      "teal": 92,
      "source": 28,
      "pc": [
        124
      ]
    },
    {
      "teal": 93,
      "source": 29,
      "pc": [
        125,
        126
      ]
    },
    {
      "teal": 94,
      "source": 29,
      "pc": [
        127,
        128,
        129
      ]
    },
    {
      "teal": 95,
      "source": 29,
      "pc": [
        130
      ]
    },
    {
      "teal": 96,
      "source": 29,
      "pc": [
        131,
        132
      ]
    },
    {
      "teal": 97,
      "source": 29,
      "pc": [
        133,
        134,
        135
      ]
    },
    {
      "teal": 98,
      "source": 29,
      "pc": [
        136
      ]
    },
    {
      "teal": 99,
      "source": 29,
      "pc": [
        137
      ]
    },
    {
      "teal": 100,
      "source": 29,
      "pc": [
        138
      ]
    },
    {
      "teal": 101,
      "source": 29,
      "pc": [
        139
      ]
    },
    {
      "teal": 102,
      "source": 21,
      "pc": [
        140
      ]
    },
    {
      "teal": 105,
      "source": 6,
      "pc": [
        141
      ]
    },
    {
      "teal": 106,
      "source": 6,
      "pc": [
        142
      ]
    },
    {
      "teal": 109,
      "source": 6,
      "pc": [
        143,
        144,
        145,
        146,
        147,
        148
      ]
    },
    {
      "teal": 110,
      "source": 6,
      "pc": [
        149,
        150,
        151
      ]
    },
    {
      "teal": 111,
      "source": 6,
      "pc": [
        152,
        153,
        154,
        155
      ]
    },
    {
      "teal": 114,
      "source": 6,
      "errorMessage": "this contract does not implement the given ABI method for create NoOp",
      "pc": [
        156
      ]
    },
    {
      "teal": 117,
      "source": 6,
      "pc": [
        157,
        158,
        159,
        160,
        161,
        162
      ]
    },
    {
      "teal": 118,
      "source": 6,
      "pc": [
        163,
        164,
        165
      ]
    },
    {
      "teal": 119,
      "source": 6,
      "pc": [
        166,
        167,
        168,
        169
      ]
    },
    {
      "teal": 122,
      "source": 6,
      "errorMessage": "this contract does not implement the given ABI method for call NoOp",
      "pc": [
        170
      ]
    }
  ],
  "source": {
    "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCgovLyBUaGlzIFRFQUwgd2FzIGdlbmVyYXRlZCBieSBURUFMU2NyaXB0IHYwLjkyLjAKLy8gaHR0cHM6Ly9naXRodWIuY29tL2FsZ29yYW5kZm91bmRhdGlvbi9URUFMU2NyaXB0CgovLyBUaGlzIGNvbnRyYWN0IGlzIGNvbXBsaWFudCB3aXRoIGFuZC9vciBpbXBsZW1lbnRzIHRoZSBmb2xsb3dpbmcgQVJDczogWyBBUkM0IF0KCi8vIFRoZSBmb2xsb3dpbmcgdGVuIGxpbmVzIG9mIFRFQUwgaGFuZGxlIGluaXRpYWwgcHJvZ3JhbSBmbG93Ci8vIFRoaXMgcGF0dGVybiBpcyB1c2VkIHRvIG1ha2UgaXQgZWFzeSBmb3IgYW55b25lIHRvIHBhcnNlIHRoZSBzdGFydCBvZiB0aGUgcHJvZ3JhbSBhbmQgZGV0ZXJtaW5lIGlmIGEgc3BlY2lmaWMgYWN0aW9uIGlzIGFsbG93ZWQKLy8gSGVyZSwgYWN0aW9uIHJlZmVycyB0byB0aGUgT25Db21wbGV0ZSBpbiBjb21iaW5hdGlvbiB3aXRoIHdoZXRoZXIgdGhlIGFwcCBpcyBiZWluZyBjcmVhdGVkIG9yIGNhbGxlZAovLyBFdmVyeSBwb3NzaWJsZSBhY3Rpb24gZm9yIHRoaXMgY29udHJhY3QgaXMgcmVwcmVzZW50ZWQgaW4gdGhlIHN3aXRjaCBzdGF0ZW1lbnQKLy8gSWYgdGhlIGFjdGlvbiBpcyBub3QgaW1wbGVtZW50ZWQgaW4gdGhlIGNvbnRyYWN0LCBpdHMgcmVzcGVjdGl2ZSBicmFuY2ggd2lsbCBiZSAiKk5PVF9JTVBMRU1FTlRFRCIgd2hpY2gganVzdCBjb250YWlucyAiZXJyIgp0eG4gQXBwbGljYXRpb25JRAohCmludCA2CioKdHhuIE9uQ29tcGxldGlvbgorCnN3aXRjaCAqY2FsbF9Ob09wICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqY3JlYXRlX05vT3AgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVEICpOT1RfSU1QTEVNRU5URUQgKk5PVF9JTVBMRU1FTlRFRCAqTk9UX0lNUExFTUVOVEVECgoqTk9UX0lNUExFTUVOVEVEOgoJLy8gVGhlIHJlcXVlc3RlZCBhY3Rpb24gaXMgbm90IGltcGxlbWVudGVkIGluIHRoaXMgY29udHJhY3QuIEFyZSB5b3UgdXNpbmcgdGhlIGNvcnJlY3QgT25Db21wbGV0ZT8gRGlkIHlvdSBzZXQgeW91ciBhcHAgSUQ/CgllcnIKCi8vIGZvbygoKHVpbnQ2NCx1aW50NjQpLCh1aW50NjQsdWludDY0KSkpKHVpbnQ2NCx1aW50NjQpCiphYmlfcm91dGVfZm9vOgoJLy8gVGhlIEFCSSByZXR1cm4gcHJlZml4CglieXRlIDB4MTUxZjdjNzUKCgkvLyBpbnB1dHM6ICgodWludDY0LHVpbnQ2NCksKHVpbnQ2NCx1aW50NjQpKQoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQoJZHVwCglsZW4KCWludCAzMgoJPT0KCgkvLyBhcmd1bWVudCAwIChpbnB1dHMpIGZvciBmb28gbXVzdCBiZSBhICgodWludDY0LHVpbnQ2NCksKHVpbnQ2NCx1aW50NjQpKQoJYXNzZXJ0CgoJLy8gZXhlY3V0ZSBmb28oKCh1aW50NjQsdWludDY0KSwodWludDY0LHVpbnQ2NCkpKSh1aW50NjQsdWludDY0KQoJY2FsbHN1YiBmb28KCWNvbmNhdAoJbG9nCglpbnQgMQoJcmV0dXJuCgovLyBmb28oaW5wdXRzOiBJbnB1dHMpOiBPdXRwdXRzCmZvbzoKCXByb3RvIDEgMQoKCS8vICppZjBfY29uZGl0aW9uCgkvLyB0ZXN0cy9jb250cmFjdHMvYXJjNTYuYWxnby50czoyMgoJLy8gaW5wdXRzLnN1YnRyYWN0LmEgPCBpbnB1dHMuc3VidHJhY3QuYgoJZnJhbWVfZGlnIC0xIC8vIGlucHV0czogSW5wdXRzCglleHRyYWN0IDE2IDgKCWJ0b2kKCWZyYW1lX2RpZyAtMSAvLyBpbnB1dHM6IElucHV0cwoJZXh0cmFjdCAyNCA4CglidG9pCgk8CglieiAqaWYwX2VuZAoKCS8vICppZjBfY29uc2VxdWVudAoJLy8gc3VidHJhY3QuYSBtdXN0IGJlIGdyZWF0ZXIgdGhhbiBzdWJ0cmFjdC5iCgllcnIKCippZjBfZW5kOgoJLy8gdGVzdHMvY29udHJhY3RzL2FyYzU2LmFsZ28udHM6MjQKCS8vIHRoaXMuZ2xvYmFsS2V5LnZhbHVlID0gdGhpcy5zb21lTnVtYmVyCglieXRlIDB4Njc2YzZmNjI2MTZjNGI2NTc5IC8vICJnbG9iYWxLZXkiCglwdXNoaW50IFRNUExfc29tZU51bWJlcgoJYXBwX2dsb2JhbF9wdXQKCgkvLyB0ZXN0cy9jb250cmFjdHMvYXJjNTYuYWxnby50czoyNQoJLy8gdGhpcy5nbG9iYWxNYXAoJ2ZvbycpLnZhbHVlID0geyBmb286IDEzLCBiYXI6IDM3IH0KCWJ5dGUgMHg3MDAwMDM2NjZmNmYKCWJ5dGUgMHgwMDBkMDAyNQoJYXBwX2dsb2JhbF9wdXQKCgkvLyB0ZXN0cy9jb250cmFjdHMvYXJjNTYuYWxnby50czoyNwoJLy8gcmV0dXJuIHsKCS8vICAgICAgIHN1bTogaW5wdXRzLmFkZC5hICsgaW5wdXRzLmFkZC5iLAoJLy8gICAgICAgZGlmZmVyZW5jZTogaW5wdXRzLnN1YnRyYWN0LmEgLSBpbnB1dHMuc3VidHJhY3QuYiwKCS8vICAgICB9OwoJZnJhbWVfZGlnIC0xIC8vIGlucHV0czogSW5wdXRzCglleHRyYWN0IDAgOAoJYnRvaQoJZnJhbWVfZGlnIC0xIC8vIGlucHV0czogSW5wdXRzCglleHRyYWN0IDggOAoJYnRvaQoJKwoJaXRvYgoJZnJhbWVfZGlnIC0xIC8vIGlucHV0czogSW5wdXRzCglleHRyYWN0IDE2IDgKCWJ0b2kKCWZyYW1lX2RpZyAtMSAvLyBpbnB1dHM6IElucHV0cwoJZXh0cmFjdCAyNCA4CglidG9pCgktCglpdG9iCgljb25jYXQKCXJldHN1YgoKKmFiaV9yb3V0ZV9jcmVhdGVBcHBsaWNhdGlvbjoKCWludCAxCglyZXR1cm4KCipjcmVhdGVfTm9PcDoKCW1ldGhvZCAiY3JlYXRlQXBwbGljYXRpb24oKXZvaWQiCgl0eG5hIEFwcGxpY2F0aW9uQXJncyAwCgltYXRjaCAqYWJpX3JvdXRlX2NyZWF0ZUFwcGxpY2F0aW9uCgoJLy8gdGhpcyBjb250cmFjdCBkb2VzIG5vdCBpbXBsZW1lbnQgdGhlIGdpdmVuIEFCSSBtZXRob2QgZm9yIGNyZWF0ZSBOb09wCgllcnIKCipjYWxsX05vT3A6CgltZXRob2QgImZvbygoKHVpbnQ2NCx1aW50NjQpLCh1aW50NjQsdWludDY0KSkpKHVpbnQ2NCx1aW50NjQpIgoJdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMAoJbWF0Y2ggKmFiaV9yb3V0ZV9mb28KCgkvLyB0aGlzIGNvbnRyYWN0IGRvZXMgbm90IGltcGxlbWVudCB0aGUgZ2l2ZW4gQUJJIG1ldGhvZCBmb3IgY2FsbCBOb09wCgllcnI=",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "templateVariables": [
    {
      "name": "someNumber",
      "type": "uint64"
    }
  ]
}